{"ast":null,"code":"import _objectSpread from \"/Users/kaylagraham/Desktop/Thinkful/trelloyes/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kaylagraham/Desktop/Thinkful/trelloyes/src/App.js\";\nimport React, { Component } from 'react';\nimport List from './list';\nimport './app.css';\nimport STORE from './store.js';\n\nconst newRandomCard = () => {\n  const id = Math.random().toString(36).substring(2, 4) + Math.random().toString(36).substring(2, 4);\n  return {\n    id,\n    title: \"Random Card \".concat(id),\n    content: 'lorem ipsum'\n  };\n};\n\nfunction omit(obj, keyToOmit) {\n  return Object.entries(obj).reduce((newObj, [key, value]) => key === keyToOmit ? newObj : _objectSpread({}, newObj, {\n    [key]: value\n  }), {});\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      store: STORE\n    };\n\n    this.handleDeleteCard = cardId => {\n      let _this$state$store = this.state.store,\n          lists = _this$state$store.lists,\n          allCards = _this$state$store.allCards;\n      let newLists = lists.map(lists => _objectSpread({}, list, {\n        cardIds: list.cardIds.filter(id => id !== cardId)\n      }));\n      let newCards = omit(allCards, cardId);\n      this.setState({\n        store: {\n          lists: newLists,\n          allCards: newCards\n        }\n      });\n    };\n\n    this.handleAddCard = listId => {\n      const newCard = newRandomCard();\n      const newLists = this.state.store.lists.map(list => {\n        if (list.id === listId) {\n          return _objectSpread({}, list, {\n            cardIds: [...list.cardIds, newCard.id]\n          });\n        }\n\n        return list;\n      });\n      this.setState({\n        store: {\n          lists: newLists,\n          allCards: _objectSpread({}, this.state.store.allCards, {\n            [newCard.id]: newCard\n          })\n        }\n      });\n    };\n  }\n\n  render() {\n    const store = this.state.store;\n    return React.createElement(\"main\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Trelloyes!\")), React.createElement(\"div\", {\n      className: \"App-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, store.lists.map(list => React.createElement(List, {\n      key: list.id,\n      id: list.id,\n      header: list.header,\n      cards: list.cardIds.map(id => store.allCards[id]),\n      onClickDelete: this.handleDeleteCard,\n      onClickAdd: this.handleAddCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kaylagraham/Desktop/Thinkful/trelloyes/src/App.js"],"names":["React","Component","List","STORE","newRandomCard","id","Math","random","toString","substring","title","content","omit","obj","keyToOmit","Object","entries","reduce","newObj","key","value","App","state","store","handleDeleteCard","cardId","lists","allCards","newLists","map","list","cardIds","filter","newCards","setState","handleAddCard","listId","newCard","render","header"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport List from './list'\nimport './app.css';\nimport STORE from './store.js';\n\nconst newRandomCard = () => {\n  const id = Math.random().toString(36).substring(2, 4)\n    + Math.random().toString(36).substring(2, 4);\n  return {\n    id,\n    title: `Random Card ${id}`,\n    content: 'lorem ipsum',\n  }\n}\n\nfunction omit(obj, keyToOmit) {\n  return Object.entries(obj).reduce(\n    (newObj, [key, value]) =>\n        key === keyToOmit ? newObj : {...newObj, [key]: value},\n    {}\n  );\n}\n\nclass App extends React.Component {\n  state = {\n    store: STORE\n  };\n\n  handleDeleteCard = (cardId) => {\n    let { lists, allCards} = this.state.store;\n\n    let newLists = lists.map(lists => ({\n      ...list,\n      cardIds: list.cardIds.filter(id => id !== cardId)\n    }));\n\n    let newCards = omit(allCards, cardId);\n    \n    this.setState({\n      store: {\n        lists: newLists,\n        allCards: newCards\n      }\n    })\n  };\n\n  handleAddCard = (listId) => {\n    const newCard = newRandomCard()\n\n    const newLists = this.state.store.lists.map(list => {\n      if (list.id === listId) {\n        return {\n          ...list,\n          cardIds: [...list.cardIds, newCard.id]\n        };\n      }\n      return list;\n    })\n\n    \n    this.setState({\n      store: {\n        lists: newLists,\n        allCards: {\n          ...this.state.store.allCards,\n          [newCard.id]: newCard\n        }\n      }\n    })\n  };\n\n\n  render() {\n    const {store} = this.state;\n    \n    \n    return (\n      <main className='App'>\n        <header className='App-header'>\n          <h1>Trelloyes!</h1>\n        </header>\n        <div className='App-list'>\n          {store.lists.map(list => (\n            <List\n              key={list.id}\n              id={list.id}\n              header={list.header}\n              cards={list.cardIds.map(id => store.allCards[id])}\n              onClickDelete={this.handleDeleteCard}\n              onClickAdd={this.handleAddCard}\n            />\n          ))}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}